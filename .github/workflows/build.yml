name: Build and Push Go App

on:
  push:
    branches:
      - main  # Déclenche la pipeline sur un push vers la branche principale

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Télécharger le code source
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Vérifier l’arborescence des fichiers
      - name: List files in repository
        run: ls -la

      # 3. Vérifier les fichiers dans app/src
      - name: List files in app/src
        run: ls -la app/src

      # 4. Configurer Go
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.21

      # 5. Installer les dépendances
      - name: Install dependencies
        run: |
          cd app/src
          go mod tidy

      # 6. Construire le binaire
      - name: Build binary
        run: |
          cd app/src
          go build -o app-binary main.go

      # 7. Scanner les vulnérabilités avec Trivy
      - name: Scan vulnerabilities with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          scan-type : fs
          args: app/src

      # 8. Authentifier GCP
      - name: Authenticate with GCP
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
        run: |
          echo "${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}" | base64 --decode > key.json
          gcloud auth activate-service-account --key-file=key.json
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}

      # 9. Construire et pousser l'image Docker dans Artifact Registry
      - name: Build and push Docker image to Artifact Registry
        run: |
    docker build -t europe-west1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/go-repo/app-binary:latest -f app/src/Dockerfile app/src
    docker push europe-west1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/go-repo/app-binary:latest
