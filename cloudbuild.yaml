steps:
  # 1 Vérifier les secrets avec GitLeaks
  - name: "gcr.io/cloud-builders/git"
    entrypoint: "sh"
    args:
      - "-c"
      - |
        curl -sSfL https://github.com/zricethezav/gitleaks/releases/download/v8.17.0/gitleaks-linux-amd64 -o /usr/local/bin/gitleaks
        chmod +x /usr/local/bin/gitleaks
        gitleaks detect --source app/src --exit-code 1

  # 2. Scanner les vulnérabilités avec Trivy
  - name: "gcr.io/cloud-builders/docker"
    entrypoint: "sh"
    args:
      - "-c"
      - |
        curl -sfL https://aquasecurity.github.io/trivy-repo/deb/public.key | apt-key add -
        echo "deb https://aquasecurity.github.io/trivy-repo/deb focal main" > /etc/apt/sources.list.d/trivy.list
        apt-get update && apt-get install -y trivy
        trivy fs app/src

  # 3. Construire le binaire Go
  - name: "golang:1.21"
    entrypoint: "sh"
    args:
      - "-c"
      - |
        cd app/src
        go build -o app-binary main.go

  # 4. Construire et Pousser l'image Docker dans Artifact Registry
  - name: "gcr.io/cloud-builders/docker"
    args: [
      "build", "-t",
      "europe-west1-docker.pkg.dev/$PROJECT_ID/go-repo/app-binary:latest",
      "-f", "app/src/Dockerfile",
      "app/src"
    ]
  - name: "gcr.io/cloud-builders/docker"
    args: [
      "push",
      "europe-west1-docker.pkg.dev/$PROJECT_ID/go-repo/app-binary:latest"
    ]

images:
  - "europe-west1-docker.pkg.dev/$PROJECT_ID/go-repo/app-binary:latest"
